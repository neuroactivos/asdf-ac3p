#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

OS="$(uname -s)"
case "$OS" in
    Linux*)     os="linux";;
    Darwin*)    os="darwin";;
    *)          echo "Unsupported OS: $OS" >&2; exit 1;;
esac

RELEASE="${ASDF_INSTALL_VERSION}"
ASSET_NAME="ac3p.$os.x86_64.bin"
INSTALL_PATH="$ASDF_INSTALL_PATH/bin"
TEMP_DIR=$(mktemp -d)
TEMP_FILE="$TEMP_DIR/$ASSET_NAME"

trap 'rm -rf "${TEMP_DIR}"' EXIT

error_exit() {
  echo "$1" >&2
  exit "${2:-1}"
}

if [ -z "$PAT" ]; then
    PAT_HEADER=""
else
    PAT_HEADER="-H \"Authorization: token $PAT\""
fi

OWNER='neuroactivos'
REPO='ac3p-workspace'
RELEASES_BASE_URL="https://api.github.com/repos/$OWNER/$REPO/releases"

R_T="${RELEASE:-latest}"
RELEASE_INFO_URL="$RELEASES_BASE_URL/${R_T/tags\//}"
RELEASE_DATA=$(curl -s $PAT_HEADER -H "Accept: application/vnd.github.v3+json" "$RELEASE_INFO_URL")

R_ID=$(echo "$RELEASE_DATA" | jq -r '.id')
R_TAG=$(echo "$RELEASE_DATA" | jq -r '.tag_name')

if [ -z "$R_ID" ] || [ -z "$R_TAG" ]; then
    error_exit "ERROR: failed to get release data"
fi

mkdir -p "$INSTALL_PATH"

ASSET_DOWNLOAD_URL="$RELEASES_BASE_URL/$R_ID/assets"
ASSET_ID=$(curl -s -L $PAT_HEADER -H "Accept: application/vnd.github+json" \
            "$ASSET_DOWNLOAD_URL" | jq -r --arg NAME "$ASSET_NAME" '.[] | select(.name == $NAME) | .id')

if [ -z "$ASSET_ID" ]; then
    error_exit "ERROR: failed to get the asset id from the release asset data"
fi

ASSET_DOWNLOAD_URL="$RELEASES_BASE_URL/assets/$ASSET_ID"

echo "Installing asset $ASSET_NAME from release $R_TAG into $INSTALL_PATH/$ASSET_NAME"

if curl -s -S -L $PAT_HEADER -H "Accept: application/octet-stream" \
     -o "$TEMP_FILE" \
     "$ASSET_DOWNLOAD_URL"; then
    mv "$TEMP_FILE" "$INSTALL_PATH/$ASSET_NAME"
    chmod +x "$INSTALL_PATH/$ASSET_NAME"
    asdf reshim ac3p "$RELEASE"
else
    error_exit "ERROR: failed to download the asset"
fi

